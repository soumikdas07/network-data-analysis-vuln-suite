import os
from datetime import datetime
import pdfkit

from utils.packet_analyzer import analyze_pcap  # <-- NEW IMPORT

WKHTMLTOPDF_PATH = r"C:\Program Files\wkhtmltopdf\bin\wkhtmltopdf.exe"

def convert_html_to_pdf(html_path, pdf_path="output/combined_report.pdf"):
    try:
        config = pdfkit.configuration(wkhtmltopdf=WKHTMLTOPDF_PATH)
        os.makedirs(os.path.dirname(pdf_path), exist_ok=True)
        pdfkit.from_file(html_path, pdf_path, configuration=config)
        return os.path.abspath(pdf_path)
    except Exception as e:
        print(f"[!] PDF conversion failed: {e}")
        return None

def generate_html_report(nmap_summary, pcap_summary, output_path="output/combined_report.html"):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    html_content = f"""
    <html>
    <head>
        <title>Network Analysis Report</title>
        <style>
            body {{
                font-family: Arial, sans-serif;
                padding: 20px;
                background-color: #f7f7f7;
            }}
            h1 {{
                color: #333;
            }}
            pre {{
                background-color: #fff;
                border: 1px solid #ccc;
                padding: 10px;
                overflow-x: auto;
                white-space: pre-wrap;
            }}
        </style>
    </head>
    <body>
        <h1> Network Analysis Report</h1>
        <p><strong>Generated on:</strong> {timestamp}</p>

        <h2> Nmap Scan Summary</h2>
        <pre>{nmap_summary}</pre>

        <h2> Packet Capture Summary</h2>
        <pre>{pcap_summary}</pre>

        <footer style="margin-top: 30px;">
            Report generated by <strong>NetIntel Suite</strong>
        </footer>
    </body>
    </html>
    """

    os.makedirs(os.path.dirname(output_path), exist_ok=True)
    with open(output_path, "w", encoding="utf-8") as f:
        f.write(html_content)

    return os.path.abspath(output_path)

def generate_combined_report(nmap_file, pcap_file):
    try:
        with open(nmap_file, "r", encoding="utf-8") as f:
            nmap_summary = f.read()

        pcap_summary = analyze_pcap(pcap_file)

        return nmap_summary, pcap_summary
    except Exception as e:
        print(f"[!] Error generating report: {e}")
        return "", ""
